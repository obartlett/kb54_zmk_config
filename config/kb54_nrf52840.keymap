/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HYPER LG(LS(LC(LALT)))

/ {

    behaviors {
        ht: hold_tap_kp_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_KP_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

    };

// Key positions?
// -----------------------------------------------------------------------------------------
// | 0   |  1   |  2   |  3   |  4   |  5   |   |  6   |  7    |  8   |  9   |  10  |  11  |
// | 12  |  13  |  14  |  15  |  16  |  17  |   |  18  |  19   |  20  |  21  |  22  |  23  |
// | 24  |  25  |  26  |  27  |  28  |  29  |   |  30  |  31   |  32  |  33  |  34  |  35  |
// | 36  |  37  |  38  |  39  |  40  |  41  |   |  42  |  43   |  44  |  45  |  46  |  47  |
//                     |  48  |  49  |  50  |   |  51  |  52   |  53  |

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | =+   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |  -_    |
// | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  \     |
// | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '     |
// | CAPS |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | CTRL+B (for tmux)
//                    | LWR | BSP | DEL |   | ENT | SPC  | RSE |

                        bindings = <
   &ht PLUS EQUAL   &ht EXCL N1 &ht AT N2   &ht HASH N3  &ht DLLR N4    &ht PRCNT N5    &ht CARET N6 &ht AMPS N7    &ht STAR N8  &ht LPAR N9  &ht RPAR N0    &ht UNDER KP_MINUS
   &kp TAB          &kp Q       &kp W       &kp E        &kp R          &kp T           &kp Y        &kp U          &kp I        &kp O        &kp P          &ht PIPE BSLH
   &kp ESC          &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F    &kp G           &kp H        &mt RSHFT J    &mt RCTRL K  &mt RALT L   &mt RGUI SEMI  &ht DQT SQT
   &caps_word       &ht GRAVE Z &kp X       &kp C        &mt HYPER V    &kp B           &kp N        &mt HYPER M    &ht LT COMMA &ht GT DOT   &ht QMARK FSLH &kp RC(B) 
                                            &mo 1        &mt LGUI BSPC  &kp DEL         &mt RGUI RET &kp SPACE      &mo 2 
                        >;
                };

                lower_layer {
                    display-name = "LWR";
                    label = "LWR";
// NEW LWR
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6      |  PRV    |  P/P    |  NXT    |  MUT  | VOL- |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LG(LFT) | LA(LFT) | LA(RGT) | LG(RGT) |       | VOL+ |
// |      |     |     |     |     |     |   | LFT     | DWN     |  UP     | RGT     |       |      |
// |      |     |     |     |     |     |   |         | PG_DN   |  PG_UP  |         |       |      |
//                    |     |     |     |   |         |         |         |
                        bindings = <
   &trans       &trans          &trans          &trans          &trans          &trans                  &trans      &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_MUT &kp C_VOL_UP
   &bt BT_CLR   &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4            &kp LG(LFT) &kp LA(LFT) &kp LA(RGT) &kp LG(RGT) &trans    &kp C_VOL_DN
   &trans       &trans          &trans          &trans          &trans          &trans                  &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans    &trans
   &trans       &trans          &trans          &trans          &trans          &trans                  &trans      &kp PG_DN   &kp PG_UP   &trans      &trans    &trans
                                                &trans          &trans          &trans                  &trans      &trans      &trans
                        >;
                };

                raise_layer {
                    display-name = "RSE";
                    label = "RSE";
// -----------------------------------------------------------------------------------------
// | RST  | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |  F11 |
// |      |     |     |     |  '  |  -  |   |     |     |     |     |     |  F12 |
// |      |  {  |  }  |  (  |  )  |  |  |   |     |     |     |     |     |      |
// |      |  `  |  #  |  [  |  ]  |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <


   &bootloader &kp F1     &kp F2          &kp F3          &kp F4      &kp F5              &kp F6      &kp F7          &kp F8          &kp F9      &kp F10  &kp F11
   &trans      &trans     &trans          &trans          &ht DQT SQT &ht UNDER KP_MINUS  &trans      &trans          &trans          &trans      &trans   &kp F12  
   &trans      &kp LBRC    &kp RBRC       &kp LPAR        &kp RPAR    &kp PIPE            &kp MINUS   &kp EQUAL       &kp LBKT        &kp RBKT    &kp BSLH &kp GRAVE
   &trans      &kp GRAVE   &kp HASH       &kp LBKT        &kp RBKT    &trans              &kp UNDER   &kp PLUS        &kp LBRC        &kp RBRC    &kp PIPE &kp TILDE
                                          &trans          &trans      &trans              &trans      &trans          &trans  
                        >;
                };
        };
};
